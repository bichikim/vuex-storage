{"version":3,"sources":["webpack://vuex-storage/webpack/universalModuleDefinition","webpack://vuex-storage/webpack/bootstrap","webpack://vuex-storage/external \"lodash\"","webpack://vuex-storage/external \"cookie\"","webpack://vuex-storage/./src/cookie.ts","webpack://vuex-storage/./src/index.ts"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Cookies","options","isClient","_init","req","res","_req","_res","_isClient","_updateCookie","data","_cookies","JSON","parse","_a","remove","_saveCookie","set","_value","stringify","external_cookie_","document","cookie","headers","_cookie_1","cookies","_cookie","getHeader","external_lodash_","toString","cookieData","regex_1","RegExp","rawCookie","cookies_1","split","forEach","test","push","setHeader","join","storeExceptOrOnly","_state","except","only","state","clonedState","src_VuexStorage","_this","restore","isRun","_b","strict","_c","local","_d","mutationName","session","_e","storageFirst","clientSide","console","warn","_store","mutation","payload","that","keys","moduleKey","_vm","$set","clear","context","src_cookie","path","sessionStorage","window","localStorage","setItem","store","cookieState","sessionState","localState","sessionStorage_1","localStorage_1","sessionData","localData","getItem","originalState","commit","replaceState","save","options_1","__assign","nuxtServerInit","actionContext","nuxtContext","plugin","Error","subscribe","onNuxtReady","process","server"],"mappings":"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","file":"app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"cookie\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vuex-storage\", [\"lodash\", \"cookie\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vuex-storage\"] = factory(require(\"lodash\"), require(\"cookie\"));\n\telse\n\t\troot[\"vuex-storage\"] = factory(root[\"lodash\"], root[\"cookie\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import value from '*.json'\r\nimport * as cookie from 'cookie'\r\nimport {Request, Response} from 'express'\r\nimport {merge} from 'lodash'\r\ninterface ICookieOptions {\r\n  req?: Request\r\n  res?: Response\r\n}\r\nconst SET_COOKIE = 'set-cookie'\r\n\r\nexport {CookieSerializeOptions} from 'cookie'\r\n\r\nexport default class Cookies {\r\n  private _res?: Response\r\n  private _req?: Request\r\n  private _isNuxt: boolean\r\n  private _cookies: {[key: string]: any}\r\n  private _isClient: boolean\r\n  private _init: boolean = false\r\n  constructor(options: ICookieOptions = {}, isClient: boolean = true) {\r\n    const {req, res} = options\r\n    this._req = req\r\n    this._res = res\r\n    this._isClient = isClient\r\n    this._updateCookie()\r\n    this._init = true\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  get isClient(): boolean {\r\n    return this._isClient\r\n  }\r\n\r\n  get(name: string, options?: cookie.CookieSerializeOptions) {\r\n    this._updateCookie()\r\n    const data = this._cookies[name]\r\n    try{\r\n      return JSON.parse(data)\r\n    }catch{\r\n      return data\r\n    }\r\n  }\r\n\r\n  remove(name: string, options?: cookie.CookieSerializeOptions) {\r\n    delete this._cookies[name]\r\n    this._saveCookie(name, '', options)\r\n  }\r\n\r\n  set(name: string, value: object | string, options?: cookie.CookieSerializeOptions) {\r\n    let _value = value\r\n    if(typeof _value === 'object'){\r\n      _value = JSON.stringify(value)\r\n    }\r\n    this._cookies[name] = value\r\n    this._saveCookie(name, _value, options)\r\n  }\r\n\r\n  private _updateCookie() {\r\n    if(this.isClient){\r\n      this._cookies = cookie.parse(document.cookie)\r\n      return\r\n    }\r\n    this._cookies = {}\r\n    const {_req} = this\r\n    if(_req && _req.headers){\r\n      let _cookie = _req.headers.cookie || _req.cookies\r\n      if(typeof _cookie === 'object'){\r\n        this._cookies = _cookie\r\n      }else{\r\n        this._cookies = cookie.parse(_cookie)\r\n      }\r\n    }\r\n    const {_res} = this\r\n    const _cookie = _res && _res.getHeader(SET_COOKIE)\r\n    if(_cookie){\r\n      this._cookies = merge(this._cookies, cookie.parse(_cookie.toString()))\r\n    }\r\n  }\r\n\r\n  private _saveCookie(name: string, value?: string, options?: cookie.CookieSerializeOptions) {\r\n    const cookieData = cookie.serialize(name, value || '', options)\r\n    if(this.isClient){\r\n      document.cookie = cookieData\r\n      return\r\n    }\r\n    const {_req, _res} = this\r\n    if(_res){\r\n      const regex = new RegExp(`^${name}=`)\r\n      const rawCookie = _res.getHeader(SET_COOKIE)\r\n      let cookies: string[] = []\r\n      if(rawCookie){\r\n        rawCookie.toString().split(';')\r\n          .forEach((value: string) => {\r\n            if(!regex.test(value)){\r\n              cookies.push(value)\r\n            }\r\n          })\r\n      }\r\n      if(value){\r\n        cookies.push(cookieData)\r\n      }\r\n      _res.setHeader(SET_COOKIE, cookies.join('; '))\r\n    }\r\n  }\r\n}\r\n","import {Request, Response} from 'express'\r\nimport {cloneDeep, merge, omit, pick} from 'lodash'\r\nimport {ActionContext, Mutation, Store} from 'vuex'\r\nimport {Plugin} from 'vuex'\r\nimport Cookies, {CookieSerializeOptions} from './cookie'\r\ninterface INuxtContext {\r\n  req: Request,\r\n  res: Response,\r\n}\r\n\r\nexport interface IVuexStorageOptions<S> {\r\n  /**\r\n   * cookie storage\r\n   */\r\n  cookie?: IFilterOptions\r\n  /**\r\n   * session storage\r\n   */\r\n  session?: IFilterOptions\r\n  /**\r\n   * local storage\r\n   */\r\n  local?: IFilterOptions\r\n  /**\r\n   * restore data from client storage\r\n   */\r\n  restore?: boolean\r\n  /**\r\n   * supporting vuex strict\r\n   */\r\n  strict?: boolean\r\n  /**\r\n   * override storage data to state\r\n   * @default false\r\n   */\r\n  storageFirst?: boolean\r\n  key?: string\r\n  mutationName?: string\r\n  clientSide?: (store: Store<S>, options: IVuexStorageOptions<S>) => boolean | boolean\r\n  /**\r\n   * @deprecated\r\n   */\r\n  isRun?: boolean\r\n  /**\r\n   * @deprecated\r\n   * please use restore\r\n   */\r\n  isRestore?: boolean\r\n  /**\r\n   * @deprecated\r\n   * please use strict\r\n   */\r\n  isStrictMode?: boolean\r\n}\r\nexport interface IFilterOptions {\r\n  except?: string[]\r\n  only?: string[]\r\n  options?: CookieSerializeOptions\r\n}\r\n\r\n// saving mutation name\r\nfunction storeExceptOrOnly(_state: any, except?: string[], only?: string[]): any {\r\n  const state = cloneDeep(_state)\r\n  let clonedState: any = {}\r\n  if(except){\r\n    clonedState = omit(state, except)\r\n  }else{\r\n    clonedState = state\r\n  }\r\n  if(only){\r\n    clonedState = pick(clonedState, only)\r\n  }\r\n  return clonedState\r\n}\r\n\r\nexport default class VuexStorage<S extends any> {\r\n  readonly mutationName: string\r\n  readonly mutation: Mutation<S>\r\n  readonly plugin: Plugin<S>\r\n  readonly restore: (context?: INuxtContext) => void\r\n  readonly save: (state: any, context?: INuxtContext) => void\r\n  readonly clear: () => void\r\n  readonly nuxtServerInit: (actionContext: ActionContext<S, S>, nuxtContext: INuxtContext) => void\r\n  private _store: Store<S>\r\n\r\n  constructor(options: IVuexStorageOptions<S> = {}) {\r\n    const {\r\n      cookie,\r\n      restore = true,\r\n      isRun,\r\n      strict = false,\r\n      key = 'vuex',\r\n      local,\r\n      mutationName = '__RESTORE_MUTATION',\r\n      session,\r\n      storageFirst = true,\r\n      clientSide,\r\n    } = options\r\n\r\n    /* istanbul ignore if */\r\n    if(isRun){\r\n      console.warn('please do not use the isRun option')\r\n    }\r\n\r\n    const isClient = (): boolean => {\r\n      if(typeof clientSide === 'function'){\r\n        return clientSide(this._store, options)\r\n      }\r\n      if(typeof clientSide === 'boolean'){\r\n        return clientSide\r\n      }\r\n      return typeof document === 'object'\r\n    }\r\n\r\n    this.mutationName = mutationName\r\n\r\n    this.mutation = function(state: S, payload: any) {\r\n      // eslint-disable-next-line consistent-this\r\n      const that: any = this\r\n      Object.keys(payload).forEach((moduleKey: string) => {\r\n        that._vm.$set(state, moduleKey, payload[moduleKey])\r\n      })\r\n    }\r\n\r\n    this.clear = (context?: INuxtContext) => {\r\n      const cookies = new Cookies(context, isClient())\r\n      cookies.set(key, {}, {path: '/'})\r\n\r\n      if(!isClient()){return}\r\n      const {sessionStorage, localStorage} = window\r\n      sessionStorage.setItem(key, '{}')\r\n      localStorage.setItem(key, '{}')\r\n    }\r\n\r\n    this.restore = (context?: INuxtContext) => {\r\n      const store = this._store\r\n      let cookieState = {}\r\n      if(cookie){\r\n        const cookies = new Cookies(context, isClient())\r\n        cookieState = storeExceptOrOnly(cookies.get(key), cookie.except, cookie.only)\r\n      }\r\n\r\n      let sessionState = {}\r\n      let localState = {}\r\n      if(isClient()){\r\n        const {sessionStorage, localStorage} = window\r\n        let sessionData = '{}'\r\n        let localData = '{}'\r\n        if(session){\r\n          sessionData = sessionStorage.getItem(key) || '{}'\r\n          sessionState = storeExceptOrOnly(JSON.parse(sessionData), session.except, session.only)\r\n        }\r\n        if(local){\r\n          localData = localStorage.getItem(key) || '{}'\r\n          localState = storeExceptOrOnly(JSON.parse(localData), local.except, local.only)\r\n        }\r\n      }\r\n\r\n      let state: any = merge(sessionState, localState, cookieState)\r\n      const originalState = cloneDeep(store.state)\r\n      if(storageFirst){\r\n        state = merge(originalState, state)\r\n      }else{\r\n        state = merge(state, originalState)\r\n      }\r\n\r\n      if(strict){\r\n        store.commit(mutationName, state)\r\n      }else{\r\n        store.replaceState(state)\r\n      }\r\n    }\r\n\r\n    this.save = (state: any, context?: INuxtContext) => {\r\n      this.clear()\r\n      const cookies = new Cookies(context, isClient())\r\n      if(cookie && cookies){\r\n        const {options = {}} = cookie\r\n        cookies.set(\r\n          key,\r\n          storeExceptOrOnly(\r\n            state,\r\n            cookie.except,\r\n            cookie.only,\r\n          ),\r\n          {path: '/', ...options})\r\n      }\r\n\r\n      if(!isClient()){return}\r\n      const {sessionStorage, localStorage} = window\r\n      if(session){\r\n        sessionStorage.setItem(key,\r\n          JSON.stringify(storeExceptOrOnly(state, session.except, session.only)))\r\n      }\r\n      if(local){\r\n        localStorage.setItem(key,\r\n          JSON.stringify(storeExceptOrOnly(state, local.except, local.only)))\r\n      }\r\n    }\r\n\r\n    this.nuxtServerInit = (actionContext: ActionContext<S, S>, nuxtContext: INuxtContext) => {\r\n      if(restore){\r\n        this.restore(nuxtContext)\r\n      }\r\n      this.save(this._store.state, nuxtContext)\r\n    }\r\n\r\n    this.plugin = (store: Store<S>) => {\r\n      if(this._store){\r\n        throw new Error('plugin install twice')\r\n      }\r\n      this._store = store\r\n      const plugin = (store: Store<S>) => {\r\n        // restore state\r\n        if(restore){\r\n          this.restore()\r\n        }\r\n\r\n        this.save(store.state)\r\n        store.subscribe((mutation, state) => {\r\n          this.save(state)\r\n        })\r\n      }\r\n      if(isClient() && window.onNuxtReady){\r\n        window.onNuxtReady(() => (plugin(store)))\r\n        return\r\n      }\r\n      if(process.server){\r\n        return\r\n      }\r\n      plugin(store)\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}